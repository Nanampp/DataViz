geom_bar(stat="identity", position="dodge")+
xlab("Sexo") + ylab("Peso Medio (Kg)") +
ggtitle("Precio promedio por zona y tipo de alojamiento")+
theme()
df %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price))%>%
ggplot(aes(x=neighbourhood_group, y=m, fill=factor(room_type))) +
geom_bar(stat="identity", position="dodge")+
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme()
df %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price))%>%
ggplot(aes(x=room_type, y=m)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme()
df %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price))%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme()
df %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price))%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme()
df %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price))%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme()
df %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price))%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
xlab("") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme()
df %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price))%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme(axis.text.x=element_blank())
df %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price)) -> group_type
group_type%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme(axis.text.x=element_blank())
df %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price)) -> group_type
group_type%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme(axis.text.x=element_blank())
ggplot(data=group_type, mapping = aes(x=room_type, y=m)) +
geom_violin()
df %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price)) -> group_type
group_type%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme(axis.text.x=element_blank())
ggplot(data=group_type, mapping = aes(x=room_type, y=m)) +
geom_violin()+
geom_jitter(height = 0, width = 0.1)
df %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price)) -> group_type
group_type%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme(axis.text.x=element_blank())
ggplot(data=group_type, mapping = aes(x=room_type, y=m)) +
geom_violin()+
geom_boxplot(width=0.2)
library(readr)
library(dplyr)
library(mice)
library(VIM)
library(DBI)
library(RPostgres)
library(ggplot2)
library(ggmap)
myLocation <- "Nueva York"
mykey = "AIzaSyCRgNUY6U40KR4MHy0RHKsUxsSRLkE_0i0"
register_google(key = mykey)
get_googlemap(myLocation) %>% ggmap()
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 6)
ggmap(myMap) + geom_point(data=df, aes(x = longitud, y = latitude))
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 6)
ggmap(myMap) + geom_point(data=df, aes(x = longitude, y = latitude))
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 10)
ggmap(myMap) + geom_point(data=df, aes(x = longitude, y = latitude))
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 10)
ggmap(myMap)
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 10)
ggmap(myMap) + geom_point(data=df, aes(x = longitude, y = latitude))
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 15)
ggmap(myMap) + geom_point(data=df, aes(x = longitude, y = latitude))
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 12)
ggmap(myMap) + geom_point(data=df, aes(x = longitude, y = latitude))
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 10)
ggmap(myMap) + geom_point(data=df, aes(x = longitude, y = latitude))
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 10)
ggmap(myMap)
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 10)
ggmap(myMap) + geom_point(data=df, aes(x = longitude, y = latitude))
View(group_type)
ggmap(myMap) + geom_point(data=df, aes(x = longitude, y = latitude, colour= neighbourhood_group))
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 10)
ggmap(myMap) + geom_point(data=df, aes(x = longitude, y = latitude, colour= neighbourhood_group))
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 11)
ggmap(myMap) + geom_point(data=df, aes(x = longitude, y = latitude, colour= neighbourhood_group))
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 10)
ggmap(myMap) + geom_point(data=df, aes(x = longitude, y = latitude, colour= price))
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 10)
ggmap(myMap) + geom_point(data=df, aes(x = longitude, y = latitude, colour= neighbourhood_group))
ggmap(myMap, extent = "device") +
stat_density2d(data = df, aes(x = longitude, y = latitude, fill = ..level..,
alpha = ..level..),
size = 0.01, bins = 16, geom = "polygon") +
scale_fill_gradient(low = "green", high ="red") +
scale_alpha(range = c(0, 0.3), guide = FALSE) +
facet_wrap(~neighbourhood_group)
ggmap(myMap) +
geom_point(data=df, aes(x = longitude, y = latitude, colour= price))
scale_fill_gradient(low = "green", high ="red") +
facet_wrap(~neighbourhood_group)
ggmap(myMap) +
geom_point(data=df, aes(x = longitude, y = latitude, colour= price))+
scale_fill_gradient(low = "green", high ="red") +
facet_wrap(~neighbourhood_group)
par(mfrow = c(1, 2))
ggplot(df) +
aes(x = price) +
geom_histogram(fill = "blue") +
theme_minimal()
ggplot(df) +
aes(x = minimum_nights) +
geom_histogram(fill = "red") +
theme_minimal()
ggplot(df) +
aes(x = "", y = price) +
geom_boxplot(fill = "blue") +
theme_minimal()
ggplot(df) +
aes(x = "", y = minimum_nights) +
geom_boxplot(fill = "red") +
theme_minimal()
boxplot.stats(df$price)$out
min(boxplot.stats(df$price)$out)
min(boxplot.stats(df$price)$out)
min(boxplot.stats(df$minimum_nights)$out)
boxplot.stats(df$price)$out -> x
min(boxplot.stats(df$price)$out)
min(boxplot.stats(df$minimum_nights)$out)
c(quantile(df$price, 0.025), quantile(df$price, 0.975))
c(quantile(df$price, 0.025), quantile(df$price, 0.975))
c(quantile(df$minimum_nights, 0.025), quantile(df$minimum_nights, 0.975))
c(quantile(df$price, 0.01), quantile(df$price, 0.99))
c(quantile(df$minimum_nights, 0.025), quantile(df$minimum_nights, 0.975))
c(quantile(df$price, 0.025), quantile(df$price, 0.975))
c(quantile(df$minimum_nights, 0.025), quantile(df$minimum_nights, 0.975))
bound <- c(median(df$price) - 3 * mad(df$price, constant = 1), median(df$price) + 3 * mad(df$price, constant = 1))
c(median(df$price) - 3 * mad(df$price, constant = 1), median(df$price) + 3 * mad(df$price, constant = 1))
c(median(df$price) - 3 * mad(df$price, constant = 1), median(df$price) + 3 * mad(df$price, constant = 1))
c(median(df$minimum_nights) - 3 * mad(df$minimum_nights, constant = 1), median(df$minimum_nights) + 3 * mad(df$minimum_nights, constant = 1))
nrow(df[df$price>335, ])
nrow(df[df$price>335, ])
nrow(df[df$price>500, ])
nrow(df[df$price>244, ])
nrow(df)
nrow(df[df$price>335, ])/nrow(df)
nrow(df[df$price>500, ])/nrow(df)
nrow(df[df$price>244, ])/nrow(df)
nrow(df)
nrow(df[df$price>335, ])/nrow(df)*100.00
nrow(df[df$price>500, ])/nrow(df)*100.00
nrow(df[df$price>244, ])/nrow(df)*100.00
nrow(df)
nrow(df[df$price>335, ])/nrow(df)*100.00
nrow(df[df$price>500, ])/nrow(df)*100.00
nrow(df[df$price>244, ])/nrow(df)*100.00
nrow(df[df$price>500, ])
nrow(df)
nrow(df[df$price>335, ])/nrow(df)*100.00
nrow(df[df$price>500, ])/nrow(df)*100.00
nrow(df[df$price>244, ])/nrow(df)*100.00
df_out = df[df$price<500, ]
df_out = df[df$price<500, ]
summary(df_out)
par(mfrow = c(1, 2))
ggplot(df) +
aes(x = price) +
geom_histogram(fill = "blue") +
theme_minimal()
ggplot(df) +
aes(x = "", y = price) +
geom_boxplot(fill = "blue") +
theme_minimal()
par(mfrow = c(1, 2))
ggplot(df_out) +
aes(x = price) +
geom_histogram(fill = "blue") +
theme_minimal()
ggplot(df_out) +
aes(x = "", y = price) +
geom_boxplot(fill = "blue") +
theme_minimal()
df_out = df[df$price<335, ]
summary(df_out)
par(mfrow = c(1, 2))
ggplot(df_out) +
aes(x = price) +
geom_histogram(fill = "blue") +
theme_minimal()
ggplot(df_out) +
aes(x = "", y = price) +
geom_boxplot(fill = "blue") +
theme_minimal()
par(mfrow = c(1, 2))
ggplot(df_out) +
aes(x = price) +
geom_histogram(fill = "blue") +
theme_minimal()
ggplot(df_out) +
aes(x = "", y = price) +
geom_boxplot(fill = "blue") +
theme_minimal()
par(mfrow = c(1, 2))
ggplot(df_out) +
aes(x = price) +
geom_histogram(fill = "pink") +
theme_minimal()
ggplot(df_out) +
aes(x = "", y = price) +
geom_boxplot(fill = "pink") +
theme_minimal()
df_out %>%
group_by(host_id) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(5) -> top_hostid
ggplot(data= top_hostid, aes(x = factor(host_id), y=n)) +
geom_bar(stat="identity", fill = "blue") +
xlab("Host_Id") + ylab("Cant. alojamientos") +
ggtitle("Top 5 de los anfitriones con más alojamientos")
df_out %>%
group_by(host_id) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(5) -> top_hostid
borrar = c("calculated_host_listings_count")
df_out = df_out[, !(names(df_out) %in% borrar)]
ggplot(data= top_hostid, aes(x = factor(host_id), y=n)) +
geom_bar(stat="identity", fill = "blue") +
xlab("Host_Id") + ylab("Cant. alojamientos") +
ggtitle("Top 5 de los anfitriones con más alojamientos")
df_host = filter(df, host_id %in% top_hostid$host_id)
df_host%>%
group_by(host_id, neighbourhood_group) %>%
summarise(n = n()) %>%
ggplot(aes(x=factor(host_id), y=n, fill=factor(neighbourhood_group))) +
geom_bar(stat="identity", position="dodge")+
xlab("Host_id") + ylab("Cant. Alojamientos") +
ggtitle("Top 5 de anfitriones con más alojamientos distribuidos por grupo vecindario")+
theme()
df_host%>%
ggplot(aes(x=factor(host_id), y=price)) +
geom_boxplot(fill = "pink")
theme()
df_host%>%
ggplot(aes(x=factor(host_id), y=price)) +
geom_boxplot()
theme()
df_host%>%
ggplot(aes(x=factor(host_id), y=price)) +
geom_boxplot(fill = "pink")+
xlab("Host_Id") + ylab("Precio") +
ggtitle("Distribución de precios para los 5 anfitriones con más alojamientos")
theme()
df_host%>%
ggplot(aes(x=factor(host_id), y=price)) +
geom_boxplot(fill = "pink")+
facet_wrap(~neighbourhood_group)+
xlab("Host_Id") + ylab("Precio") +
ggtitle("Distribución de precios para los 5 anfitriones con más alojamientos")
theme()
df_host%>%
ggplot(aes(x=factor(host_id), y=price)) +
geom_boxplot(fill = "pink")+
facet_wrap(~neighbourhood_group)+
xlab("Host_Id") + ylab("Precio") +
ggtitle("Distribución de precios para los 5 anfitriones con más alojamientos")
theme()
df %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price)) -> group_type
group_type%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme(axis.text.x=element_blank())
ggplot(data=group_type, mapping = aes(x=room_type, y=m)) +
geom_violin()+
geom_boxplot(width=0.2)
df_host = filter(df_out, host_id %in% top_hostid$host_id)
df_host%>%
group_by(host_id, neighbourhood_group) %>%
summarise(n = n()) %>%
ggplot(aes(x=factor(host_id), y=n, fill=factor(neighbourhood_group))) +
geom_bar(stat="identity", position="dodge")+
xlab("Host_id") + ylab("Cant. Alojamientos") +
ggtitle("Top 5 de anfitriones con más alojamientos distribuidos por grupo vecindario")+
theme()
df_host%>%
ggplot(aes(x=factor(host_id), y=price)) +
geom_boxplot(fill = "pink")+
xlab("Host_Id") + ylab("Precio") +
ggtitle("Distribución de precios para los 5 anfitriones con más alojamientos")
theme()
df_out %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price)) -> group_type
group_type%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme(axis.text.x=element_blank())
ggplot(data=group_type, mapping = aes(x=room_type, y=m)) +
geom_violin()+
geom_boxplot(width=0.2)
df_out %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price)) -> group_type
group_type%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme(axis.text.x=element_blank())
ggplot(data=df_out, mapping = aes(x=neighbourhood_group, y=price)) +
geom_violin()+
geom_boxplot(width=0.2)+
df_out %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price)) -> group_type
group_type%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme(axis.text.x=element_blank())
ggplot(data=df_out, mapping = aes(x=neighbourhood_group, y=price)) +
geom_violin()+
geom_boxplot(width=0.2)
ggplot(data=df_out, mapping = aes(x=neighbourhood_group, y=price)) +
geom_violin()+
geom_boxplot(width=0.2)
df_out %>%
group_by(neighbourhood_group, room_type)%>%
summarise(m = mean(price)) -> group_type
group_type%>%
ggplot(aes(x=room_type, y=m, fill=room_type)) +
geom_bar(stat="identity")+
facet_wrap(~neighbourhood_group)+
xlab("Grupo Vecindario") + ylab("Precio Medio") +
ggtitle("Precio promedio por grupo de vecindario y tipo de alojamiento")+
theme(axis.text.x=element_blank())
ggplot(data=df_out, mapping = aes(x=neighbourhood_group, y=price)) +
geom_violin()+
geom_boxplot(width=0.2)+
facet_wrap(~neighbourhood_group)
ggplot(data=df_out, mapping = aes(x=room_type, y=price)) +
geom_violin()+
geom_boxplot(width=0.2)+
facet_wrap(~neighbourhood_group)
ggplot(data=df_out, mapping = aes(x=neighbourhood_group, y=price)) +
geom_violin()+
geom_boxplot(width=0.2)+
facet_wrap(~room_type)
myLocation <- "Nueva York"
myMap <- get_map(location = myLocation, zoom = 10)
ggmap(myMap) + geom_point(data=df_out, aes(x = longitude, y = latitude, colour= neighbourhood_group))
ggmap(myMap) +
geom_point(data=df, aes(x = longitude, y = latitude, colour= price))+
scale_fill_gradient(low = "green", high ="red") +
facet_wrap(~neighbourhood_group)
ggmap(myMap) +
geom_point(data=df, aes(x = longitude, y = latitude, colour= price))+
scale_fill_gradient(low = "green", high ="red") +
facet_wrap(~neighbourhood_group)
ggmap(myMap) +
geom_point(data=df_out, aes(x = longitude, y = latitude, colour= price))+
scale_fill_gradient(low = "green", high ="red") +
facet_wrap(~neighbourhood_group)
ggmap(myMap) +
geom_point(data=df_out, aes(x = longitude, y = latitude, colour= price))+
scale_fill_gradient(low = "green", high ="red") +
facet_wrap(~neighbourhood_group)
ggmap(myMap, extent = "device") +
geom_density2d(data = df_out, aes(x =longitude, y = latitude), size = 0.3) +
stat_density2d(data = df_out,
aes(x = DLONGITUDE, y = DLATITUDE, fill = ..level..,
alpha =..level..),
size = 0.01, bins = 16, geom = "polygon") +
scale_fill_gradient(low = "green", high ="red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
ggmap(myMap, extent = "device") +
geom_density2d(data = df_out, aes(x =longitude, y = latitude), size = 0.3) +
stat_density2d(data = df_out,
aes(x =longitude, y = latitude, fill = ..level..,
alpha =..level..),
size = 0.01, bins = 16, geom = "polygon") +
scale_fill_gradient(low = "green", high ="red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
ggmap(myMap) +
geom_point(data=df_out, aes(x = longitude, y = latitude, colour= price))+
scale_colour_gradientn(
...,
colours,
values = NULL,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour",
colors
)+
facet_wrap(~neighbourhood_group)
ggmap(myMap) +
geom_point(data=df_out, aes(x = longitude, y = latitude, colour= price))+
scale_color_gradient(low="blue", high="red")+
facet_wrap(~neighbourhood_group)
ggmap(myMap) +
geom_point(data=df_out, aes(x = longitude, y = latitude, colour= price))+
scale_color_gradient(low="red", high="purple")+
facet_wrap(~neighbourhood_group)
ggmap(myMap) +
geom_point(data=df_out, aes(x = longitude, y = latitude, colour= price))+
scale_color_gradientn(colours ="rainbow")+
facet_wrap(~neighbourhood_group)
ggmap(myMap) +
geom_point(data=df_out, aes(x = longitude, y = latitude, colour= price))+
scale_color_gradientn(colours ="rainbow5")+
facet_wrap(~neighbourhood_group)
ggmap(myMap) +
geom_point(data=df_out, aes(x = longitude, y = latitude, colour= price))+
scale_color_gradientn(colours = rainbow(5))+
facet_wrap(~neighbourhood_group)
ggmap(myMap) +
geom_point(data=df_out, aes(x = longitude, y = latitude, colour= price))+
scale_color_gradientn(colours = rainbow(5))+
facet_wrap(~neighbourhood_group)
